---
alwaysApply: true
---

### Clanker SDK v4 token deployment rule

Use the Clanker SDK v4 to deploy a Clanker token programmatically. Refer to the official guide for full options: [Clanker SDK v4.0.0 docs](https://clanker.gitbook.io/clanker-documentation/sdk/v4.0.0).

### Install

```bash
npm install clanker-sdk viem
# or
yarn add clanker-sdk viem
# or
bun add clanker-sdk viem
```

### Minimal deploy (Base network example)

```ts
import { Clanker } from "clanker-sdk/v4";
import {
  createWalletClient,
  createPublicClient,
  privateKeyToAccount,
  http,
} from "viem";
import { base } from "viem/chains";

// 1) Configure viem account and clients
const account = privateKeyToAccount(process.env.PRIVATE_KEY as `0x${string}`);
const publicClient = createPublicClient({ chain: base, transport: http() });
const wallet = createWalletClient({ account, chain: base, transport: http() });

// 2) Initialize SDK
const clanker = new Clanker({ publicClient, wallet });

// 3) Deploy token (returns tx handle and helper to await completion)
const { txHash, waitForTransaction, error } = await clanker.deploy({
  name: "My Token",
  symbol: "MTK",
  tokenAdmin: account.address,
  // vanity: true, // optional: request vanity salt for address suffix
});

if (error) throw error;

// 4) Wait for the full deployment and read deployed address
const { address } = await waitForTransaction();
console.log("Token deployed at:", address);
console.log(`View on Clanker World: https://clanker.world/clanker/${address}`);
```

### Optional configuration (pool, fees, rewards, vault, dev buy)

```ts
import {
  Clanker,
  POOL_POSITIONS,
  FEE_CONFIGS,
  type ClankerTokenV4,
} from "clanker-sdk/v4";

const tokenConfig: ClankerTokenV4 = {
  name: "My Cool Project Coin",
  symbol: "MCPC",
  tokenAdmin: account.address,
  // Metadata (all optional)
  image: "ipfs://<cid>",
  metadata: { description: "Token with custom configuration" },
  context: { interface: "Clanker SDK" },

  // Pool configuration
  // - Defaults: WETH pair, 10 ETH starting market cap
  // - If using custom starting market cap, ensure at least one position's tickLower touches starting price
  pool: { positions: POOL_POSITIONS.Project },

  // Fees: static or dynamic presets
  fees: FEE_CONFIGS.DynamicBasic,

  // Reward recipients (bps must sum to 100%)
  rewards: {
    recipients: [
      {
        recipient: "0xRecipient1",
        admin: "0xAdmin1",
        bps: 8000,
        token: "Paired",
      },
      {
        recipient: "0xRecipient2",
        admin: "0xAdmin2",
        bps: 2000,
        token: "Both",
      },
    ],
  },

  // Vault and optional vesting
  vault: {
    percentage: 10,
    lockupDuration: 2_592_000,
    vestingDuration: 2_592_000,
  },

  // Initial dev buy (WETH pair shown)
  devBuy: { ethAmount: 0.1 },
};

const { waitForTransaction } = await clanker.deploy(tokenConfig);
const { address } = await waitForTransaction();
```

### Notes

- Always pass a valid `tokenAdmin` that will control reward admin roles and optional metadata updates.
- Default paired token is WETH; set `pool.pairedToken` for custom pairs (provide proper ticks/positions and, if non-WETH, a WETHâ†’Paired v4 `poolKey` for `devBuy`).
- If you need dynamic fees or extensions/locker specifics, align your SDK config with your on-chain Clanker Hook/Factory deployment.

Source: [Clanker SDK v4.0.0 docs](https://clanker.gitbook.io/clanker-documentation/sdk/v4.0.0)
